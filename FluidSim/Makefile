# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),debug)
  RESCOMP = windres
  TARGETDIR = ../bin/Debug-linux-x86_64/FluidSim
  TARGET = $(TARGETDIR)/FluidSim
  OBJDIR = ../bin-int/Debug-linux-x86_64/FluidSim
  DEFINES += -DST_PLATFORM_LINUX -DST_DEBUG
  INCLUDES += -I../Stengine/vendor/spdlog/include -I../Stengine/src -I../Stengine/vendor -I../Stengine/vendor/GLFW/include -I../Stengine/vendor/Glad/include -I../Stengine/vendor/imgui -I../Stengine/vendor/Box2D/include -I../Stengine/vendor/glm -I../Stengine/vendor/stb_image -I../Stengine/vendor/entt/include -I../Stengine/vendor/yaml-cpp/include -I../Stengine/vendor/ImGuizmo
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g `pkg-config --cflags gtk+-3.0`
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17 `pkg-config --cflags gtk+-3.0`
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../bin/Debug-linux-x86_64/Stengine/libStengine.a ../Stengine/vendor/GLFW/bin/Debug-linux-x86_64/GLFW/libGLFW.a ../Stengine/vendor/Glad/bin/Debug-linux-x86_64/Glad/libGlad.a ../Stengine/vendor/imgui/bin/Debug-linux-x86_64/ImGui/libImGui.a ../Stengine/vendor/Box2D/bin/Debug-linux-x86_64/Box2D/libBox2D.a ../Stengine/vendor/yaml-cpp/bin/Debug-linux-x86_64/yaml-cpp/libyaml-cpp.a -lgtk-3 -lglib-2.0 -lgobject-2.0 -lshaderc_combined -lspirv-cross-core -lspirv-cross-glsl
  LDDEPS += ../bin/Debug-linux-x86_64/Stengine/libStengine.a ../Stengine/vendor/GLFW/bin/Debug-linux-x86_64/GLFW/libGLFW.a ../Stengine/vendor/Glad/bin/Debug-linux-x86_64/Glad/libGlad.a ../Stengine/vendor/imgui/bin/Debug-linux-x86_64/ImGui/libImGui.a ../Stengine/vendor/Box2D/bin/Debug-linux-x86_64/Box2D/libBox2D.a ../Stengine/vendor/yaml-cpp/bin/Debug-linux-x86_64/yaml-cpp/libyaml-cpp.a
  ALL_LDFLAGS += $(LDFLAGS) -L../../../sdks/vulkansdk/x86_64/lib -L/usr/lib64 -m64 `pkg-config --libs gtk+-3.0`
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	cp -r "../FluidSim/assets" "../bin/Debug-linux-x86_64/FluidSim/assets"
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release)
  RESCOMP = windres
  TARGETDIR = ../bin/Release-linux-x86_64/FluidSim
  TARGET = $(TARGETDIR)/FluidSim
  OBJDIR = ../bin-int/Release-linux-x86_64/FluidSim
  DEFINES += -DST_PLATFORM_LINUX -DST_RELEASE
  INCLUDES += -I../Stengine/vendor/spdlog/include -I../Stengine/src -I../Stengine/vendor -I../Stengine/vendor/GLFW/include -I../Stengine/vendor/Glad/include -I../Stengine/vendor/imgui -I../Stengine/vendor/Box2D/include -I../Stengine/vendor/glm -I../Stengine/vendor/stb_image -I../Stengine/vendor/entt/include -I../Stengine/vendor/yaml-cpp/include -I../Stengine/vendor/ImGuizmo
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 `pkg-config --cflags gtk+-3.0`
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17 `pkg-config --cflags gtk+-3.0`
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../bin/Release-linux-x86_64/Stengine/libStengine.a ../Stengine/vendor/GLFW/bin/Release-linux-x86_64/GLFW/libGLFW.a ../Stengine/vendor/Glad/bin/Release-linux-x86_64/Glad/libGlad.a ../Stengine/vendor/imgui/bin/Release-linux-x86_64/ImGui/libImGui.a ../Stengine/vendor/Box2D/bin/Release-linux-x86_64/Box2D/libBox2D.a ../Stengine/vendor/yaml-cpp/bin/Release-linux-x86_64/yaml-cpp/libyaml-cpp.a -lgtk-3 -lglib-2.0 -lgobject-2.0 -lshaderc_combined -lspirv-cross-core -lspirv-cross-glsl
  LDDEPS += ../bin/Release-linux-x86_64/Stengine/libStengine.a ../Stengine/vendor/GLFW/bin/Release-linux-x86_64/GLFW/libGLFW.a ../Stengine/vendor/Glad/bin/Release-linux-x86_64/Glad/libGlad.a ../Stengine/vendor/imgui/bin/Release-linux-x86_64/ImGui/libImGui.a ../Stengine/vendor/Box2D/bin/Release-linux-x86_64/Box2D/libBox2D.a ../Stengine/vendor/yaml-cpp/bin/Release-linux-x86_64/yaml-cpp/libyaml-cpp.a
  ALL_LDFLAGS += $(LDFLAGS) -L../../../sdks/vulkansdk/x86_64/lib -L/usr/lib64 -m64 -s `pkg-config --libs gtk+-3.0`
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	cp -r "../FluidSim/assets" "../bin/Release-linux-x86_64/FluidSim/assets"
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),dist)
  RESCOMP = windres
  TARGETDIR = ../bin/Dist-linux-x86_64/FluidSim
  TARGET = $(TARGETDIR)/FluidSim
  OBJDIR = ../bin-int/Dist-linux-x86_64/FluidSim
  DEFINES += -DST_PLATFORM_LINUX -DST_DIST
  INCLUDES += -I../Stengine/vendor/spdlog/include -I../Stengine/src -I../Stengine/vendor -I../Stengine/vendor/GLFW/include -I../Stengine/vendor/Glad/include -I../Stengine/vendor/imgui -I../Stengine/vendor/Box2D/include -I../Stengine/vendor/glm -I../Stengine/vendor/stb_image -I../Stengine/vendor/entt/include -I../Stengine/vendor/yaml-cpp/include -I../Stengine/vendor/ImGuizmo
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 `pkg-config --cflags gtk+-3.0`
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17 `pkg-config --cflags gtk+-3.0`
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../bin/Dist-linux-x86_64/Stengine/libStengine.a ../Stengine/vendor/GLFW/bin/Dist-linux-x86_64/GLFW/libGLFW.a ../Stengine/vendor/Glad/bin/Dist-linux-x86_64/Glad/libGlad.a ../Stengine/vendor/imgui/bin/Dist-linux-x86_64/ImGui/libImGui.a ../Stengine/vendor/Box2D/bin/Dist-linux-x86_64/Box2D/libBox2D.a ../Stengine/vendor/yaml-cpp/bin/Dist-linux-x86_64/yaml-cpp/libyaml-cpp.a -lgtk-3 -lglib-2.0 -lgobject-2.0 -lshaderc_combined -lspirv-cross-core -lspirv-cross-glsl
  LDDEPS += ../bin/Dist-linux-x86_64/Stengine/libStengine.a ../Stengine/vendor/GLFW/bin/Dist-linux-x86_64/GLFW/libGLFW.a ../Stengine/vendor/Glad/bin/Dist-linux-x86_64/Glad/libGlad.a ../Stengine/vendor/imgui/bin/Dist-linux-x86_64/ImGui/libImGui.a ../Stengine/vendor/Box2D/bin/Dist-linux-x86_64/Box2D/libBox2D.a ../Stengine/vendor/yaml-cpp/bin/Dist-linux-x86_64/yaml-cpp/libyaml-cpp.a
  ALL_LDFLAGS += $(LDFLAGS) -L../../../sdks/vulkansdk/x86_64/lib -L/usr/lib64 -m64 -s `pkg-config --libs gtk+-3.0`
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	cp -r "../FluidSim/assets" "../bin/Dist-linux-x86_64/FluidSim/assets"
  endef
all: prebuild prelink $(TARGET)
	@:

endif

OBJECTS := \
	$(OBJDIR)/FluidSimApp.o \
	$(OBJDIR)/NavierStokesFluid.o \
	$(OBJDIR)/ParticleFluid.o \
	$(OBJDIR)/SimulationLayer.o \
	$(OBJDIR)/VerletIntegration.o \

RESOURCES := \

CUSTOMFILES := \

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

$(TARGET): $(GCH) ${CUSTOMFILES} $(OBJECTS) $(LDDEPS) $(RESOURCES) | $(TARGETDIR)
	@echo Linking FluidSim
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(CUSTOMFILES): | $(OBJDIR)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning FluidSim
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH) | $(OBJDIR)
$(GCH): $(PCH) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
else
$(OBJECTS): | $(OBJDIR)
endif

$(OBJDIR)/FluidSimApp.o: src/FluidSimApp.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/NavierStokesFluid.o: src/NavierStokesFluid.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ParticleFluid.o: src/ParticleFluid.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SimulationLayer.o: src/SimulationLayer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VerletIntegration.o: src/VerletIntegration.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif